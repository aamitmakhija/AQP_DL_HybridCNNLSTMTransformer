# ==================== runtime ====================
seed: 42

dl:
  device: cuda
  batch_size: 1024            # per GPU; reduce if VRAM limited
  num_workers: 8
  prefetch_factor: 2
  pin_memory: true
  persistent_workers: true
  optimizer: adamw
  lr: 2.0e-4
  weight_decay: 1.0e-4
  epochs: 1000
  patience: 80                # give long runs time to converge
  grad_clip: 1.0
  grad_accum_steps: 2         # effective batch = batch_size * world_size * accum
  model_dir: models_dm336_mh
  loss: huber                 # robust for spikes
  huber_delta: 12.0
  target_transform: log1p     # consistent with your pipeline
  clip_target_max: 300
  lr_scheduler:
    name: cosine_warmup       # or "reduce_on_plateau"
    warmup_epochs: 10
    min_lr: 1.0e-6
  amp:
    enabled: true
    dtype: fp16               # CUDA fp16 is fast and stable

# ==================== paths =====================
paths:
  data_dir: raw_data
  artifacts_dir: experiments/artifacts
  checkpoints_dir: experiments/checkpoints
  dataset_stream_dir: dataset_stream
  splits_dir: splits
  features_dir: features
  features_scaled_dir: features_scaled_ps
  keep_config: configs/keep.yaml

# ================== data files ==================
data_files:
  air: airquality.csv
  met: meteorology.csv
  station: station.csv
  district: district.csv
  city: city.csv
  forecast: weatherforecast.csv

# =========== canonical schema & headers =========
data:
  id_col: station_id
  station_col: station_id
  time_col: Datetime
  target: PM25_Concentration

  features:
    - PM25_Concentration
    - PM10_Concentration
    - NO2_Concentration
    - SO2_Concentration
    - O3_Concentration
    - temperature
    - pressure
    - humidity
    - wind_speed
    - wind_direction
    - CO_Concentration
    - weather
    - up_temperature
    - bottom_temperature
    - wind_level
    - frequent

  headers:
    time: [Datetime, datetime, timestamp, time, date_time]
    id:   [station_id, "Station ID", StationId, stationID, site_id, station]
    airquality:
      station: ["Station ID", station_id, station, STATION_ID]
      time:    [Time, Datetime, time, timestamp, TIME]
      pm25:    [PM25_Concentration, "PM2.5", PM25, pm25, pm2_5, pm2.5, pm25_concentration]
      pm10:    [PM10_Concentration, PM10, pm10, pm10_concentration]
      no2:     [NO2_Concentration, NO2, no2, no2_concentration]
      co:      [CO_Concentration, CO, co, co_concentration]
      o3:      [O3_Concentration, O3, o3, o3_concentration]
      so2:     [SO2_Concentration, SO2, so2_concentration]
    station:
      station:  ["Station ID", station_id, station]
      district: ["District ID", district_id, district]
    district:
      district: ["District ID", district_id, district]
      city:     ["City ID", city_id, city]
    city:
      city:     ["City ID", city_id, city]
    meteorology:
      geo:            [ID, geo_id, id]
      time:           [Time, Datetime, time, timestamp]
      weather:        [Weather, weather]
      temperature:    [Temperature, Temp, AT, temperature, temp]
      pressure:       [Pressure, pressure, press]
      humidity:       [Humidity, RH, humidity, rh]
      wind_speed:     ["Wind Speed", WIND_SPEED, WindSpeed, wind_speed, ws]
      wind_direction: ["Wind Direction", WIND_DIREC, WindDirection, wind_direction, wd]
    weatherforecast:
      geo:                [ID, geo_id, id]
      ftime:              ["Forecast Time", ForecastTime, time_forecast, ftime]
      future:             ["Future Time", FutureTime, time_future, future_time]
      weather:            [Weather, weather]
      up_temperature:     ["Up temperature", UpTemperature, up_temperature, temp_high_c, temp_hi]
      bottom_temperature: ["Bottom Temperature", BottomTemperature, bottom_temperature, temp_low_c, temp_lo]
      wind_level:         ["Wind Level", WindLevel, wind_level]
      wind_direction:     ["Wind Direction", WIND_DIREC, wind_direction, WindDirection]

# ============== missing data handling ================
missing:
  drop_threshold: 0.8
  rolling_mean_hours: 24
  drop_features:
    - bottom_temperature
    - frequent
  impute:
    enabled: true
    ffill_limit: 6
    rolling_window: 24
    median_fallback: true

# ============ station selection (optional) ============
station_scope:
  mode: "all"
  station_ids: []

# ================= time split cutoffs =================
split:
  train_end: "2014-12-31"
  val_end:   "2015-03-31"
  drop_years: [1970]

# ==================== scaling ========================
scaling:
  type: standard
  per_station: true
  exclude_columns:
    - PM25_Concentration
    - station_id
    - Datetime
    - id
    - district_id
    - city_id
  epsilon: 1.0e-8
  output_format: parquet

# ============== feature engineering ==================
lags:
  enabled: true
  hours: [1, 3, 6, 12, 24, 48]

features:
  rolling_windows: [6, 12, 24, 48, 72, 168]
  output:
    format: parquet
    features_file: dataset_features.parquet
    manifest_file: features_manifest.json

# ===================== output (splits & partitions) =======================
output:
  per_station_filename: data.parquet
  partition_prefix: "station="
  format: parquet
  split_filenames:
    train: train.parquet
    val:   val.parquet
    test:  test.parquet
    summary: split_summary.json

# =====================================================
# Windowing + trainer consumers
# =====================================================
sequence:
  out_dir: seq
  train_split: train
  val_split: val
  test_split: test
  lookback: 336
  horizon: [1, 3, 6, 12, 24, 48]  # multi-horizon
  stride: 3
  dropna: true
  min_valid_ratio: 0.75
  shard_size: 30000
  dtype: float32
  check_max_shards: 1
  sample:
    enabled: false          # use all windows
    method: per_station_uniform
    train_frac: 1.0
    val_frac:   1.0
    test_frac:  1.0
    min_windows_per_station: 0
    seed: 42

baselines:
  seasonal_period: 168

model:
  hybrid:
    use_station_embedding: true
    station_embed_dim: 64
    cnn_channels: [96, 96]
    cnn_kernels: [7, 5]
    cnn_dropout: 0.05
    d_model: 512
    nhead: 8
    num_layers: 8
    ff_mult: 4
    attn_dropout: 0.05
    ffn_dropout: 0.05
    pool: gap
    posenc: sin
    use_lstm: true
    lstm_hidden: 256
    lstm_layers: 1
    lstm_dropout: 0.0
    ln_eps: 1e-6

eval:
  metrics: ["rmse", "mae", "smape", "r2"]
  per_station: true
  save_preds: true

reports:
  stations_keep_txt: stations_keep.txt